<!DOCTYPE html>
<html>
<head>
    <style>
        /* Styles for the modal */
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.7);
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .modal-content {
            background-color: #fefefe;
            padding: 20px;
            border: 1px solid #888;
            width: 50%;
            text-align: center;
        }

        /* Style for response messages */
        #responseMessages {
            text-align: left;
        }

        /* Center the "OK" button */
        #okButton {
            display: none;
        }

        /* Spinner styles */
        .loader-container {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .loader {
            border: 4px solid #f3f3f3; /* Light grey */
            border-top: 4px solid #3498db; /* Blue */
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 2s linear infinite; /* Add the animation here */
            margin-right: 10px; /* Add some space between the spinner and text */
        }

        .button-container {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

        /* Keyframe animation for the spinner */
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <div id="myModal" class="modal">
        <div class="modal-content">
            <div class="loader-container">
                <div class="loader"></div> <!-- Add the spinner here -->
                <span id="progressText">Processing 0/0...</span>
            </div>
            <div id="responseMessages"></div>
            <div class="button-container">
                <button id="okButton">OK</button>
            </div>
        </div>
    </div>

    <script>
        const elementsArray = [element1, element2, element3]; // Replace with your actual array of elements

        async function processElements() {
            const modal = document.getElementById('myModal');
            const progressText = document.getElementById('progressText');
            const responseMessages = document.getElementById('responseMessages');
            const okButton = document.getElementById('okButton');
            const spinner = document.querySelector('.loader'); // Get the spinner element

            modal.style.display = 'block';

            const results = [];

            for (const element of elementsArray) {
                try {
                    progressText.textContent = `Processing ${results.length + 1}/${elementsArray.length}...`;

                    const response = await fetch('your-backend-endpoint', {
                        method: 'POST',
                        body: JSON.stringify(element),
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (response.ok) {
                        const data = await response.json();
                        const message = document.createElement('p');
                        message.textContent = `Success adding element ${data.name}`;
                        responseMessages.appendChild(message);
                    } else {
                        const message = document.createElement('p');
                        message.textContent = 'Error with element';
                        responseMessages.appendChild(message);
                    }

                    results.push('Processed'); // Push a result for each element

                    // Add a short delay to display the response message
                    await new Promise(resolve => setTimeout(resolve, 1000));

                } catch (error) {
                    const message = document.createElement('p');
                    message.textContent = 'Error with element';
                    responseMessages.appendChild(message);
                }
            }

            await Promise.all(results); // Wait for all elements to be processed

            spinner.style.display = 'none'; // Hide the spinner
            okButton.style.display = 'block'; // Show the "OK" button
        }

        okButton.addEventListener('click', function () {
            modal.style.display = 'none'; // Close the modal when the "OK" button is clicked
        });

        processElements(); // Start processing the elements
    </script>
</body>
</html>
