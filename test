const elementsArray = [element1, element2, element3]; // Replace with your actual array of elements

async function processElements() {
  for (const element of elementsArray) {
    try {
      const response = await fetch('your-backend-endpoint', {
        method: 'POST',
        body: JSON.stringify(element),
        headers: {
          'Content-Type': 'application/json'
        }
      });

      if (response.ok) {
        const data = await response.json();
        // Process data here
      } else {
        // Handle errors
      }
    } catch (error) {
      // Handle network errors or other exceptions
    }
  }
}

processElements(); // Start processing the elements


<!DOCTYPE html>
<html>
<head>
    <style>
        /* Styles for the modal */
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.7);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 50%;
            text-align: center;
        }

        /* Style for response messages */
        #responseMessages {
            text-align: left;
        }
    </style>
</head>
<body>
    <div id="myModal" class="modal">
        <div class="modal-content">
            <p id="progressText">Processing 0/0...</p>
            <div id="responseMessages"></div>
        </div>
    </div>

    <script>
        const elementsArray = [element1, element2, element3]; // Replace with your actual array of elements

        async function processElements() {
            const modal = document.getElementById('myModal');
            const progressText = document.getElementById('progressText');
            const responseMessages = document.getElementById('responseMessages');

            modal.style.display = 'block';

            for (let i = 0; i < elementsArray.length; i++) {
                try {
                    const element = elementsArray[i];
                    progressText.textContent = `Processing ${i + 1}/${elementsArray.length}...`;

                    const response = await fetch('your-backend-endpoint', {
                        method: 'POST',
                        body: JSON.stringify(element),
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (response.ok) {
                        const data = await response.json();
                        const message = document.createElement('p');
                        message.textContent = `Success adding element ${data.name}`;
                        responseMessages.appendChild(message);
                    } else {
                        const message = document.createElement('p');
                        message.textContent = 'Error with element';
                        responseMessages.appendChild(message);
                    }

                    // Add a short delay to display the response message
                    await new Promise(resolve => setTimeout(resolve, 1000));

                } catch (error) {
                    const message = document.createElement('p');
                    message.textContent = 'Error with element';
                    responseMessages.appendChild(message);
                }
            }

            modal.style.display = 'none';
            alert('Processing finished');
        }

        processElements(); // Start processing the elements
    </script>
</body>
</html>
